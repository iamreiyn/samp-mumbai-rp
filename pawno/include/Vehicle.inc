/* Include File generated by Pawn Studio */

#include <a_samp>
#include <global>
#define MAX_VEH 1500

new fcount;
stock VehicleInit()
{
	//file count
	for(new f=0;f<MAX_VEH;f++)
	{
		new fs[50];
		format(fs,50,"vehicles/v_%d.veh",f);
		if(dini_Exists(fs))
		{
			fcount++;
		}
		else
		{
			break;
		}
	}

	//var set	
	for(new i=0;i<fcount;i++)
	{
		new fss[50];
		format(fss,50,"vehicles/v_%d.veh",i);
		VehicleData[i][OwnerID] = dini_Int(fss,"OwnerID");
		VehicleData[i][Model] = dini_Int(fss,"Model");
		VehicleData[i][Color1] = dini_Int(fss,"Color1");
		VehicleData[i][Color2] = dini_Int(fss,"Color2");
		VehicleData[i][SpawnX] = dini_Float(fss,"X")
		VehicleData[i][SpawnY] = dini_Float(fss,"Y");
		VehicleData[i][SpawnZ] = dini_Float(fss,"Z");
		VehicleData[i][SpawnAng] = dini_Float(fss,"Angle");
		VehicleData[i][Engine] = dini_Int(fss,"Engine");
		
	}
	return 1;
}
// load all vehicles
stock LoadVehicles()
{
	for(new v=0;v<fcount;v++)
	{
		AddStaticVehicle(VehicleData[v][Model],VehicleData[v][SpawnX],VehicleData[v][SpawnY],VehicleData[v][SpawnZ],VehicleData[v][SpawnAng],VehicleData[v][Color1],VehicleData[v][Color2]);
		printf("Vehicle ID %d spawned.",v);
	}
	return 1;
}

stock LoadVehicle(vid)
{
	AddStaticVehicle(VehicleData[vid][Model],VehicleData[vid][SpawnX],VehicleData[vid][SpawnY],VehicleData[vid][SpawnZ],VehicleData[vid][SpawnAng],VehicleData[vid][Color1],VehicleData[vid][Color2]);
	printf("Vehicle ID %d spawned.",vid);
	return 1;
}

stock AddVehicle(modelid,Float:x,Float:y,Float:z,Float:ang, color1,color2)
{
	fcount++;
	new fsa[50];
	format(fsa,50,"vehicles/v_%d.veh",fcount);
	dini_Create(fsa);
	dini_IntSet(fsa,"Model",modelid);
	dini_FloatSet(fsa,"X",x);
	dini_FloatSet(fsa,"Y",y);
	dini_FloatSet(fsa,"Z",z);
	dini_FloatSet(fsa,"Angle",ang);
	dini_IntSet(fsa,"Color1",color1);
	dini_IntSet(fsa,"Color2",color2);
	LoadVehicle(fcount);
	return 1;
}
	